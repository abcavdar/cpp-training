{
    "version": "2.0.0",
    "tasks": [
        // Clean Task (Common for Both Compilers)
        {
            "label": "Clean C++ Project",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "if exist bin rd /S /Q bin & if exist build rd /S /Q build & for /R . %f in (*.i *.pdb *.cod, *.pdb) do del \"%f\""
            ],
            "problemMatcher": []
        },

        // MSVC (cl.exe) Build Task
        {
            "label": "Build with MSVC",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "if not exist bin mkdir bin & if not exist build mkdir build & for /R src %f in (*.cpp *.cc) do cl /EHsc /std:c++20 /Zi /Fd:bin\\program.pdb /I include /Fe:bin\\program.exe /Fo:build\\ %f /link /DEBUG /LIBPATH:lib"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$msCompile"],
            "dependsOn": "Clean C++ Project"
        },

        // Multiple File Build with MSVC (Verbose)
        {
            "label": "Multiple File Build with MSVC (Verbose)",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "if not exist bin mkdir bin & if not exist build mkdir build & for /R src %f in (*.cpp *.cc) do (cl /E /I include %f > build\\%~nf.i & cl /c /std:c++20 /Zi /EHsc /I include /FAs /Fa^\"build\\^\" /Fo:build\\%~nf.obj %f ) & link /DEBUG /PDB:bin\\program.pdb /OUT:bin\\program.exe build\\*.obj /LIBPATH:lib"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "dependsOn": "Clean C++ Project"
        },

        // Run the Executable 
        {
            "label": "Run the Executable",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "bin\\program.exe"
            ],
            "group": {
                "kind": "test",
                "isDefault": false
            },
            "problemMatcher": []
        },

        // Run MSVC Executable
        {
            "label": "Run MSVC Executable",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "bin\\program.exe"
            ],
            "group": {
                "kind": "test",
                "isDefault": false
            },
            "dependsOn": "Multiple File Build with MSVC (Verbose)",
            "problemMatcher": []
        },

        // MinGW GCC Build Task
        {
            "label": "Build with MinGW",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "if not exist bin mkdir bin & if not exist build mkdir build & for /R src %f in (*.cpp *.cc) do (g++ -std=c++20 -g -c %f -o build\\%~nf.o) & for /R build %f in (*.o) do ( echo %f | sed \"s/\\\\/\\//g\" >> build/objects.txt ) & g++ @build/objects.txt -L lib -o bin/program.exe"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "dependsOn": "Clean C++ Project"
        },

        // Multiple File Build with MinGW (Verbose)
        {
            "label": "Multiple File Build with MinGW (Verbose)",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "if not exist bin mkdir bin & if not exist build mkdir build & del /Q build\\objects.txt & for /R src %f in (*.cpp *.cc) do (g++ -c -g -std=c++20 -I include -I src -save-temps=obj %f -o build\\%~nf.o) & for /R build %f in (*.o) do ( echo %f | sed \"s/\\\\/\\//g\" >> build/objects.txt ) & g++ @build/objects.txt -L lib -o bin/program.exe"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "dependsOn": "Clean C++ Project"
        },
        
        // Run MinGW Executable
        {
            "label": "Run MinGW Executable",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "bin\\program.exe"
            ],
            "group": {
                "kind": "test",
                "isDefault": false
            },
            "dependsOn": "Multiple File Build with MinGW (Verbose)",
            "problemMatcher": []
        }
    ]
}

